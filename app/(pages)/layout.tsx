import type { Metadata } from "next";

import { client } from "@/tina/__generated__/databaseClient";

import type { GlobalConnectionQuery } from "@/tina/__generated__/types";
import { Header } from "@components/core";
import { Providers } from "@components/providers";
import { HighlightInit } from "@highlight-run/next/client";
import "@styles/styles.css";
import { cn } from "@utils/cn";
import { fontSans } from "@utils/fonts";
import React from "react";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>): Promise<JSX.Element> {
  const connection = await client.queries.globalConnection();

  return (
    <React.Fragment>
      <HighlightInit
        projectId={"56gl9g91"}
        serviceName="my-nextjs-frontend"
        tracingOrigins
        backendUrl="https://monitoring-graph.foothilltech.net/public"
        networkRecording={{
          enabled: true,
          recordHeadersAndBody: true,
          urlBlocklist: [],
        }}
      />

      <html lang="en" suppressHydrationWarning={true}>
        <head />
        <body
          className={cn(
            "min-h-screen bg-background font-sans antialiased relative",
            fontSans.variable,
          )}
        >
          <Providers>
            <div className="FTSContainer z-10 flex min-h-screen flex-col">
              <Header
                {...connection}
                data={
                  JSON.parse(
                    JSON.stringify(connection.data),
                  ) as GlobalConnectionQuery
                }
              />

              <main className="min-h-[var(--section-height)] flex-1">
                {children}
              </main>

              {/* <Footer
              {...connection}
              data={
                JSON.parse(
                  JSON.stringify(connection.data),
                ) as GlobalConnectionQuery
              }
              className="flex-none py-8"
            /> */}
            </div>
          </Providers>
        </body>
      </html>
    </React.Fragment>
  );
}
