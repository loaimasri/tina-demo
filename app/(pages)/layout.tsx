import type { Metadata } from "next";
import { cn } from "@/lib/utils";
import { fontSans } from "@/lib/fonts";
import "../globals.css";
import { ThemeProvider } from "@/components/theme-provider";
import client from "@/tina/__generated__/client";
import Header from "@/components/header";
import Footer from "@/components/footer";
import { GlobalQuery } from "../../../my-tina-app/tina/__generated__/types";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const {
      data: {
        globalConnection: { edges },
      },
    } = await client.queries.globalConnection(),
    header: GlobalQuery["global"]["header"] = edges?.[0]?.node?.header,
    footer: GlobalQuery["global"]["footer"] = edges?.[0]?.node?.footer,
    theme: GlobalQuery["global"]["theme"] = edges?.[0]?.node?.theme;

  console.log(theme?.darkMode);

  return (
    <html lang="en">
      <head />
      <body
        className={cn(
          "min-h-screen bg-background font-sans antialiased",
          fontSans.variable
        )}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <div className="flex min-h-screen flex-col container">
            <Header data={header} theme={theme} className="py-8 flex-none" />

            <main className="flex-1">{children}</main>
            <Footer data={footer} className="py-8 flex-none" />
          </div>
        </ThemeProvider>
      </body>
    </html>
  );
}
